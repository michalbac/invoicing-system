/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */
buildscript{
    ext {
        lombokVersion = "1.18.20"
        spockVersion = "2.0-groovy-3.0"
        springWebVersion = "5.3.10"
        springBootStarterVersion = "2.5.5"
        springBootStarterWebVersion = "2.5.4"
        jacksonVersion = "2.11.1"
        groovyVersion = "2.5.11"
        springBootVersion = "2.5.4"
        springDependencyManagementVersion = "1.0.11.RELEASE"
        junitVersion = "4.13"
        springBootStarterTestVersion = "2.5.4"
    }
}
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    id 'checkstyle'

    id 'jacoco'

    id 'org.springframework.boot' version "${springBootVersion}"

    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "org.springframework:spring-web:${springWebVersion}"
    implementation "org.springframework.boot:spring-boot-starter:${springBootStarterVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootStarterWebVersion}"

    testImplementation "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootStarterTestVersion}"


    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

application {
    // Define the main class for the application.
    mainClassName = 'pl.futurecollars.invoicing.App'
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

jacoco {
    toolVersion = "0.8.7"
}
test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}
jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/App.class'])
        }))
    }
}

jacocoTestCoverageVerification {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}
